DP: each step has its own row x col's grid, update each grid by each step.
Tree: normally use DFS/BFS with recursion/iteration based on what questions asked.

k Sums template:
https://leetcode.com/problems/4sum/discuss/8609/My-solution-generalized-for-kSums-in-JAVA

constant space complexity:
constant space just means the memory you use does not depends on the size of the input.

When you use recursion, the stack also counted.
Constant space means that the amount of space that your algorithm uses is independent of the input parameters. Say you are given an array of size n. If the amount of space your algorithm uses scales with n, then it's not constant. If your algorithm always uses a fixed amount of space (5 variables, an array of fixed size: 100, 300, 5000, etc..), you are golden.

O(logn) space for recursive calls.



一般而言，当一个题目出现以下特性时，我们就应该立即联想到它可能需要使用二分查找：
1.待查找的数组有序或者部分有序
2.要求时间复杂度低于 O(n)，或者直接要求时间复杂度为 O(log n)

left + ((right -left) >> 1) 其实和 (left + right) / 2 是等价的，这样写的目的一个是为了防止 (left + right) 出现溢出，另外用位运算替代除法提升性能。
